# 0, 1, 2 중에 하나가 + 될 것이다.
# 0이 포함되어 있지 않으면 0
# 조합이 0이 포함되어 있고 1 이 포함되어 있지 않으면 1
# 조합이 0 1 이면 2

# 경우의 수를 구해보자
# 나올 수 있는 전체 경우의 수 N = 8 일 경우에, 조합 2가지가 나올 수 있는 경우
# (7*8)/2 => 28가지
# 28가지 중 + 0 은 28 - 0이 포함되지 않는 조합의 수 => (N-0의 개수) * (N-0의 개수 + 1) / 2
# 여기서는 3이니까 4 * 5 / 2 = 10 가지
# ans에 + 1 이 될 경우, 0이 포함되고 1이 포함되지 않을 경우 => 12가지
# ans + 2 [0, 1]일 경우, 6가지 => ans += 2*(0의 개수 * 1의 개수)
# 다 더하면 28가지 맞음.
# 12 + 2*6 = 24
# 이걸 코드로 하면 됨.

# from collections import Counter

N = int(input())
lst = list(map(int, input().split()))

cnt_0 = lst.count(0)
cnt_1 = lst.count(1)
# 확인 위해서
# lst.sort()
# dct = Counter(lst)
# print(dct)

ans = 0
ans += 2*(cnt_0 * cnt_1)    # 2가 더해질 경우
ans += (N*(N-1) // 2) - ((N - cnt_0) * (N - cnt_0 - 1) // 2) - (cnt_0*cnt_1)    # 1이 더해질 경우

print(ans)